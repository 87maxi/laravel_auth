version: '3.8'
services:  
    php:
        build:
            context: ./dc/php-mysqli
        ports:
            - 9000:9000
        volumes:
            - ./:/var/www/html
            - ./dc/php-mysqli/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./dc/php-mysqli/phplocal.ini:/usr/local/etc/php/conf.d/local.ini
        depends_on:
            - postgres
            - mysql
            - composer
            - node
        restart: always        
        networks:
            - travellist
            
    nginx:
        image: nginx:1.13.8
        ports:
            - 80:80
        volumes:
            - ./:/var/www/html
            - ./dc/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf
        depends_on:
            - php
        networks:
            - travellist
  
    mysql:
        image: mysql:5.6
        ports:
            - 3306:3306
        #depends_on:
        #    - php
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
        networks:
            - travellist
        volumes:
            - dbdata:/var/lib/mysql
            - ./dc/php-mysqli/mysql.cnf:/etc/mysql/mysql.cnf
    postgres:
        image: postgres:14-alpine
      #container_name: ${PROJECT_NAME}-postgres
      #volumes:
      #  - dbdata:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_DATABASE}
            #- POSTGRES_HOST_AUTH_METHOD: trust
        ports:
            - "5432:5432"
        networks:
            - travellist
        #volumes:
        #    - ./dc/postgres/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    node:
        image: node:14.18
        volumes:
            - ./:/home/node
        command: >
            sh -c "cd /home/node && npm install"      

    composer:
        image: composer
        volumes:
            - .:/app
        command: composer install

networks:
  travellist:
    driver: bridge

volumes:
  dbdata:
    driver: local
